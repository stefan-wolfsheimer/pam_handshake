variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  PACKAGE_NAME: pam-handshake
stages:
  - pull
  - make
  - publish

before_script:
  - rm -f .variables
  - touch .variables
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin  $CI_REGISTRY;
  - echo export DOCKER_IMAGE=git.ia.surfsara.nl:5050/data-management-services/irods-ci-server/centos7_4_2_7:latest >> .variables
  - echo export VERSION=0.1.0 >> .variables
  - echo export MODULE_VERSION=0.1.0 >> .variables
  - echo export IRODS_VERSIONS=4.2.7,4.2.8 >> .variables
  - echo export PACKAGE_NAME=pam-handshake >> .variables
  - echo export MODULE_PACKAGE_NAME=python-pam-modules >> .variables
  - echo export REPO=DMS-RPM-Testing >> .variables

docker_pull:
  stage: pull
  tags:
    - irods
  script:
    - source .variables
    - docker pull $DOCKER_IMAGE

make:
  stage: make
  tags:
    - irods
  script:
    - source .variables
    - |
      for IRODS_VERSION in ${IRODS_VERSIONS//,/$'\n'}
      do
         export TARGET_DIR=/data/RPMS/$CI_PROJECT_NAMESPACE/$CI_COMMIT_REF_NAME/CentOS/7/irods-$IRODS_VERSION
         mkdir -p $TARGET_DIR
         docker rm build_pam_handshake || true
         docker run --name build_pam_handshake -u rpmbuild -v$( pwd):/build \
                    --entrypoint "" $DOCKER_IMAGE /home/rpmbuild/build_rpm.sh \
                    --irods-version ${IRODS_VERSION} \
                    --spec-file /build/pam_handshake.spec \
                    --package ${PACKAGE_NAME} \
                    --version $VERSION \
                    --release ${CI_PIPELINE_ID}
         docker cp build_pam_handshake:/home/rpmbuild/rpmbuild/RPMS/x86_64 $TARGET_DIR
         docker rm build_pam_handshake
      done

make_python_pam_modules:
  stage: make
  tags:
    - irods
  script:
    - source .variables
    - |
      for IRODS_VERSION in ${IRODS_VERSIONS//,/$'\n'}
      do
         export TARGET_DIR=/data/RPMS/$CI_PROJECT_NAMESPACE/$CI_COMMIT_REF_NAME/CentOS/7/irods-$IRODS_VERSION
         mkdir -p $TARGET_DIR
         docker rm build_python_pam_modules || true
         docker run --name build_python_pam_modules -u rpmbuild -v$( pwd):/build \
                    --entrypoint "" $DOCKER_IMAGE /home/rpmbuild/build_rpm.sh \
                    --irods-version ${IRODS_VERSION} \
                    --spec-file /build/pam_python_module.spec \
                    --package ${MODULE_PACKAGE_NAME} \
                    --version ${MODULE_VERSION} \
                    --release ${CI_PIPELINE_ID}
         docker cp build_python_pam_modules:/home/rpmbuild/rpmbuild/RPMS/x86_64 $TARGET_DIR
         docker rm build_python_pam_modules
      done

publish:
  stage: publish
  tags:
    - irods
  script:
    - source .variables
    - |
      for IRODS_VERSION in ${IRODS_VERSIONS//,/$'\n'}
      do
        TARGET_DIR=/data/RPMS/$CI_PROJECT_NAMESPACE/$CI_COMMIT_REF_NAME/CentOS/7/irods-$IRODS_VERSION/x86_64
        RPM=${PACKAGE_NAME}-${VERSION}-${CI_PIPELINE_ID}.x86_64.rpm
        TRPM=${PACKAGE_NAME}-${VERSION}-${CI_PIPELINE_ID}.x86_64.rpm
        REMOTE_TARGET_DIR=Centos/7/irods-$IRODS_VERSION/$CI_COMMIT_REF_NAME/x86_64/Packages
        curl -H "X-JFrog-Art-Api:$ARTIE_KEY" -XPUT https://artie.ia.surfsara.nl/artifactory/${REPO}/${REMOTE_TARGET_DIR}/${TRPM} -T $TARGET_DIR/${RPM}

        
      done


publish_python_pam_modules:
  stage: publish
  tags:
    - irods
  script:
    - source .variables
    - |
      for IRODS_VERSION in ${IRODS_VERSIONS//,/$'\n'}
      do
        TARGET_DIR=/data/RPMS/$CI_PROJECT_NAMESPACE/$CI_COMMIT_REF_NAME/CentOS/7/irods-$IRODS_VERSION/x86_64
        RPM=${MODULE_PACKAGE_NAME}-${MODULE_VERSION}-${CI_PIPELINE_ID}.x86_64.rpm
        TRPM=${MODULE_PACKAGE_NAME}-${MODULE_VERSION}-${CI_PIPELINE_ID}.x86_64.rpm
        REMOTE_TARGET_DIR=Centos/7/irods-$IRODS_VERSION/$CI_COMMIT_REF_NAME/x86_64/Packages
        curl -H "X-JFrog-Art-Api:$ARTIE_KEY" -XPUT https://artie.ia.surfsara.nl/artifactory/${REPO}/${REMOTE_TARGET_DIR}/${TRPM} -T $TARGET_DIR/${RPM}
      done
